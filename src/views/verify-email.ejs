<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>Verify Email</title>
    <style>
      :root {
        --bg: #f4f7fb;
        --card: #ffffff;
        --accent: #2563eb;
        --accent-hover: #1e4fc4;
        --success: #16a34a;
        --error: #ef4444;
        --muted: #6b7280;
      }
      * {
        box-sizing: border-box;
      }
      body {
        margin: 0;
        font-family:
          Inter,
          ui-sans-serif,
          system-ui,
          Segoe UI,
          Roboto,
          Arial;
        background: linear-gradient(180deg, var(--bg), #eef3fb);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 24px;
      }
      .card {
        width: 100%;
        max-width: 520px;
        background: var(--card);
        border-radius: 12px;
        box-shadow: 0 8px 30px rgba(16, 24, 40, 0.08);
        padding: 28px;
      }
      h1 {
        margin: 0 0 8px;
        font-size: 20px;
        color: #0f172a;
      }
      p.lead {
        margin: 0 0 18px;
        color: var(--muted);
      }
      .btn {
        display: inline-flex;
        gap: 10px;
        align-items: center;
        justify-content: center;
        padding: 10px 16px;
        background: var(--accent);
        color: #fff;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: background 0.12s ease;
      }
      .btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
      }
      .btn:hover:not(:disabled) {
        background: var(--accent-hover);
      }
      .status {
        margin-top: 16px;
        font-size: 14px;
      }
      .status.success {
        color: var(--success);
      }
      .status.error {
        color: var(--error);
      }
      .hint {
        margin-top: 12px;
        color: var(--muted);
        font-size: 13px;
      }
      .small {
        font-size: 13px;
        color: var(--muted);
      }
      .spinner {
        width: 16px;
        height: 16px;
        border: 2px solid rgba(255, 255, 255, 0.35);
        border-left-color: #fff;
        border-radius: 50%;
        animation: spin 0.9s linear infinite;
      }
      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }
    </style>
  </head>
  <body>
    <div class="card" role="main" aria-labelledby="title">
      <h1 id="title">Verify your email</h1>
      <p class="lead">
        Click the button below to confirm your email address. This will activate
        your account.
      </p>

      <div>
        <button id="verifyBtn" class="btn" type="button" aria-live="polite">
          <span id="btnContent">Verify Email</span>
        </button>
      </div>

      <div id="status" class="status" aria-live="polite"></div>
      <p class="hint">
        If the link doesn't work, make sure you opened the URL sent in your
        email or copy the token into the verification page.
      </p>
      <p class="small">
        After successful verification you'll be redirected to
        <code>http://localhost:8000</code>.
      </p>
    </div>

    <script>
      (function () {
        const btn = document.getElementById('verifyBtn');
        const btnContent = document.getElementById('btnContent');
        const status = document.getElementById('status');

        function getTokenFromUrl() {
          const parts = window.location.pathname.split('/').filter(Boolean);
          if (parts.length) {
            return parts[parts.length - 1];
          }
          return null;
        }

        const token = getTokenFromUrl();

        function showStatus(message, type) {
          status.textContent = message;
          status.className =
            'status ' +
            (type === 'success' ? 'success' : type === 'error' ? 'error' : '');
        }

        async function verifyToken() {
          if (!token) {
            showStatus('Verification token not found in URL.', 'error');
            return;
          }

          btn.disabled = true;
          btnContent.innerHTML =
            '<span class="spinner" aria-hidden="true"></span> Verifying...';
          showStatus('Sending token to server...', '');

          try {
            const res = await fetch(`/api/v1/auth/verify-email/${token}`);

            const data = await res.json().catch(() => ({}));

            if (res.ok) {
              showStatus(
                data.message || 'Email verified successfully!',
                'success'
              );
              // brief delay so user sees the message, then redirect
              setTimeout(() => {
                window.location.href = 'http://localhost:5173/setting';
              }, 1200);
            } else {
              const msg =
                data.message || `Verification failed (status ${res.status}).`;
              showStatus(msg, 'error');
              btn.disabled = false;
              btnContent.textContent = 'Retry';
            }
          } catch (err) {
            console.error(err);
            showStatus('Network error â€” could not reach server.', 'error');
            btn.disabled = false;
            btnContent.textContent = 'Retry';
          }
        }

        // click handler
        btn.addEventListener('click', verifyToken);

        // (optional) auto-run verification when page loads if token exists
        // uncomment the line below if you want automatic verification on page load:
        // if (token) verifyToken();
      })();
    </script>
  </body>
</html>
